name: Test Sync Workflow

on:
  workflow_dispatch:

jobs:
  test-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Create annotated mock tag
        run: |
          TAG_NAME="mock-tag-$(date +%s)"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag -a $TAG_NAME -m "Mock upstream release $TAG_NAME"
          git push origin $TAG_NAME
        id: create_tags

      - name: Dispatch main workflow
        run: |
          UPSTREAM_URL="https://github.com/${GITHUB_REPOSITORY}"
          TAG_NAME="${{ env.TAG_NAME }}"
          curl -X POST -H "Accept: application/vnd.github+json" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${GITHUB_REPOSITORY}/dispatches \
              -d '{"event_type": "test-sync", "client_payload": {"tag": "'"$TAG_NAME"'", "upstream_url": "'"$UPSTREAM_URL"'"}}'
        id: trigger_main_workflow

      - name: Poll main workflow status
        id: poll_status
        run: |
          WORKFLOW_NAME="Sync Fork with Upstream Releases"
          TAG_NAME=${{ env.TAG_NAME }}

          poll_for_workflow_run() {
            while true; do
              RUNS=$(gh api -H "Accept: application/vnd.github+json" \
                /repos/${GITHUB_REPOSITORY}/actions/runs \
                -q ".workflow_runs[] | select(.name == \"$WORKFLOW_NAME\" and .event == \"repository_dispatch\" and .head_branch == \"sync/$TAG_NAME\") | [.id, .status, .conclusion] | @csv" | head -n 1)
              IFS=',' read -r -a RUN_DATA <<< "$RUNS"
              if [[ -z "$RUN_DATA" ]]; then
                continue # Continue polling if no run data found
              fi
              RUN_ID=${RUN_DATA[0]//\"/}
              STATUS=${RUN_DATA[1]//\"/}
              CONCLUSION=${RUN_DATA[2]//\"/}

              if [[ "$STATUS" == "completed" ]]; then
                echo "Workflow completed with conclusion: $CONCLUSION"
                echo "RUN_STATUS=$STATUS" >> $GITHUB_ENV
                echo "RUN_CONCLUSION=$CONCLUSION" >> $GITHUB_ENV
                return
              fi
              sleep 10
            done
          }

          poll_for_workflow_run

      - name: Verify main workflow success
        if: env.RUN_CONCLUSION != 'success'
        run: exit 1

      - name: Cleanup tags and branches
        run: |
          TAG_NAME="${{ env.TAG_NAME }}"
          git push origin :refs/tags/$TAG_NAME
          git branch -D sync/$TAG_NAME || true
          git push origin --delete sync/$TAG_NAME || true